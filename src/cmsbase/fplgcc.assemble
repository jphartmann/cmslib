gcc      TITLE 'Interface code for cross compiled C.                   +        
                           Copyright John P. Hartmann 2016.'                    
                                                       EJECT                    
***********************************************************************         
*                                                                     *         
* We  are  called  from  the common procedure.  R0 contains the       *         
* address of the C program to run.  Other registers as per FPI.       *         
*                                                                     *         
* Change activity:                                                    *         
* 27 Jun 2016  New module by John P. Hartmann.                        *         
*                                                                     *         
***********************************************************************         
                                                     SPACE 2                    
 COPY    PGMID ,                                                                
                                                                                
&PGMID.GCC MODBEG FREETYPE=NONE                                                 
 DMSPDEFS VECTOR=R9,VECTOR2=YES                                         00190000
                                                                                
workarea dsect , Coordinate this with code in makefp.rexx                       
worksave ds 18f Save area                                                       
sar9 equ worksave+20+4*9,4                                                      
GBLPTRS  DS    2F                                                               
 FLAGDEF DIDCOMMIT                                                              
BUF1     PIPBFR 0                                                               
TOKEN    DS    D                                                                
PARMS    Ds    6F                                                               
                                                                                
 using workarea,r10                                                             
                                                                                
&MODULE.IN PROC SAREA=NO                                                        
 LA      R1,TOKEN                                                       00510000
 STM     R1,R3,PARMS+4                                                  00520000
 ZIP     R4                   No known environment                      00540000
 L       14,=V(__INITCG)      Initialise GCC environment if not        +00550000
                              already done                              00560000
 BASR    14,14                __initcg                                  00570000
 LTR     R15,R15                                                                
 GOTOEXIT COND=NOTZERO                                                          
 L       14,=V(__INITSP)      Allocate a subpool                        00580000
 BASR    14,14                Go get a subpool                          00590000
 LTR     8,15                                                           00600000
 IF      ZERO                                                                   
   L     14,=V(__GSTACK)                                                        
   BASR  14,14                Go allocate the stack                             
   LTR   8,15                                                                   
   IF    ZERO                                                                   
     STM       R4,R5,GBLPTRS                                                    
     LR        R15,R1         Put stack pointer in place                        
     LA        R3,PARMS       The args record                                   
     Lr        R2,10                                                            
     L         R1,20(,R10)    C code                                            
     BASR      R14,R1         Go to C code                                      
     LR        8,2                                                              
     LM        R4,R5,GBLPTRS                                                    
   FI    ,                                                                      
*  L     R14,=V(__RSTACK)                                                       
*  BASR  R14,R14                                                                
 FI      ,                                                                      
 L       R14,=V(__RELESP)     Release the subpool                               
 BASR    R14,R14                                                        00740000
 LR      R15,R8               Set Return code                           00750000
 PEXIT   RC=(R15)                                                               
 procend                                                                        
                                                       EJECT                    
***********************************************************************         
*                                                                     *         
* Glue code to call dispatcher functions                              *         
*                                                                     *         
***********************************************************************         
                                                     SPACE 2                    
         MACRO ,                                                        00920000
         #ENTER &EP,&stack                                              00930000
         gblc epix                                                              
&epix setc '&sysndx'                                                            
         GBLC  &MODULE,&pgmid                                           00940000
         ENTRY &MODULE.&EP                                              00950000
&MODULE.&EP DS  0D                                                      00960000
         GBLA  &PCURR                                                   01130000
&ad seta 0                                                                      
         aif (k'&stack eq 0).stack                                              
         GBLC  &(###EPV#SAREL#&stack)                                           
&ad seta &(###EPV#SAREL#&stack)                                                 
 aif (&ad gt 0).stack                                                           
 mnote 12,'Cannot determine work area for &snm.'                                
.stack anop                                                                     
 lhi 0,&ad                                                                      
 jas 1,enter                                                                    
 basr 12,0                                                                      
 using *,12                                                                     
         MEND  ,                                                        01180000
                                                     SPACE 2            01190000
         MACRO ,                                                        01200000
         #EXIT ,                                                        01210000
         gblc epix                                                              
exit&epix equ *                                                                 
         LR    R2,R15         Set return code                           01230000
         LM    R4,R5,GBLPTRS  Get these                                 01240000
         L     R14,=V(__SSTACK) Restore my stack                        01250000
         BASR  R14,R14                                                  01260000
         LM    R6,R15,24(R11) Restore registers                         01270000
         BR    R14            Stay away from epilogue                   01280000
         drop 12                                                                
         MEND  ,                                                        01290000
                                                       EJECT                    
***********************************************************************         
*                                                                     *         
* Entry subroutine.  Back to the pipeline environment,                *         
*                                                                     *         
***********************************************************************         
                                                     SPACE 2                    
 pdata                                                                          
enter ds 0d                                                                     
         STM   R6,R15,24(R15)                                           00990000
         LR    R11,R15        Save stack pointer                        01000000
         LR    R10,R2         Save pipe handle                          01010000
         LR    R6,R4          Get these out of the way                  01020000
         LR    R7,R5                                                    01030000
         lr 8,1 Get return out of the way                                       
         LM    R4,R5,GBLPTRS  Get these                                 01040000
         LR    R13,R11                                                  01120000
         AHI   R13,-18*4 Composite length                               01140000
         sr 13,0 Additional stuff                                               
         BASR  R15,0          Get a base                                01050000
         USING *,R15                                                    01060000
         L     R14,=V(__CSTACK) Take my stack out                       01070000
         DROP  R15                                                      01080000
         BASR  R14,R14                                                  01090000
         L     R9,sar9                                                  01100000
         LA    R1,18*4(,R13)  Stack space                               01150000
         st 1,8(13) Set HLL pointer too                                         
 br 8                                                                           
                                                                                
                                                       EJECT            01300000
*********************************************************************** 01310000
*                                                                     * 01320000
* Call the pipeline printf function.                                  * 01330000
*                                                                     * 01340000
*********************************************************************** 01350000
                                                     SPACE 2            01360000
 #ENTER  PF,DBGPR                                                       01440000
 LR      R1,R6                Get string list                           01380000
 SLL     R3,2                                                           01390000
 LA      R3,4(R3,R1)          Address last item                         01400000
 OI      0(R3),X'80'                                                    01410000
 pipcall dbgpr                                                                  
 org *-2                                                                        
 chi 15,-1                                                                      
 IF      EQUAL                                                                  
   APPLMSG TEXT='PRINTF routine not available in this level of CMS/TSO +        
               pipelines.'                                                      
   lhi 15,-3                                                                    
 else                                                                           
 basr 14,15                                                                     
 fi                                                                             
 #EXIT   ,                                                              01430000
                                                       EJECT            01460000
*********************************************************************** 01470000
*                                                                     * 01480000
* Call a conversion routine.                                          * 01490000
*                                                                     * 01500000
*********************************************************************** 01510000
                                                     SPACE 2            01520000
 #ENTER  VT                                                             01610000
 SLL     R3,2                 By four                                   01550000
 L       R15,0(R3,R9)         Get service entry                         01560000
 LM      R0,R5,0(R6)          Get register set                          01570000
 BASR    R14,R15              Go to conversion routine                  01580000
 STM     R0,R5,0(R6)          Set register set                          01590000
 #EXIT   ,                                                              01600000
                                                       EJECT            01630000
*********************************************************************** 01640000
*                                                                     * 01650000
* Call other functions                                                * 01660000
*                                                                     * 01670000
*********************************************************************** 01680000
                                                     SPACE 2            01690000
         MACRO ,                                                        01710000
         #LREC ,                                                        01720000
         L     R0,4(,R7)                                                01730000
         L     R1,0(,R7)                                                01740000
         MEND  ,                                                        01750000
                                                     SPACE 1            01760000
         MACRO ,                                                        01770000
         #STREC ,                                                       01780000
         ST    R0,4(,R7)                                                01790000
         ST    R1,0(,R7)                                                01800000
         MEND  ,                                                        01810000
                                                     SPACE 1            01820000
         MACRO ,                                                        01830000
         #TCOMM &xit                                                    01840000
         FLAGTM DIDCOMMIT                                               01850000
         IF    ZERO                                                     01860000
           PIPCOMMT 0                                                   01870000
           GBLC EPIX                                                            
           JNZ EXIT&EPIX                                                        
           FLAGON DIDCOMMIT                                             01880000
         FI    ,                                                        01890000
         MEND  ,                                                        01900000
                                                     SPACE 1            01910000
 #ENTER  SV                                                             02230000
 basr 12,0                                                                      
 using *,12                                                                     
 CASBEG  TYPE=VECTORED,REG=R3,MIN=0,MAX=10                              01930000
 CASITEM ###@@@DSPLO/4        locate                                    01940000
   #TCOMM ,                                                             01950000
   PIPLOCAT ,                                                           01960000
   #STREC ,                                                             01970000
 CASITEM ###@@@DSPPI/4        input                                     01980000
   #TCOMM ,                                                             01990000
   #LREC ,                                                              02000000
   PIPINPUT ,                                                           02010000
   #STREC ,                                                             02020000
 CASITEM ###@@@DSPPO/4        output                                    02030000
   #TCOMM ,                                                             02040000
   #LREC ,                                                              02050000
   PIPOUTP ,                                                            02060000
   #STREC ,                                                             02070000
 CASITEM 3                    commit                                    02080000
   LR    R0,R6                Get level                                 02090000
   PIPCOMMT ,                                                           02100000
   FLAGON DIDCOMMIT                                                     02110000
 CASITEM ###@@@DSPSH/4        short                                     02120000
   #TCOMM ,                                                             02130000
   PIPSHORT ,                                                           02140000
 CASITEM ###@@@DSPCM/4        cmd                                       02150000
   #LREC ,                                                              02160000
   PIPCMD ,                                                             02170000
 CASITEM ###@@@REXX/4         rexx                                      02180000
   #LREC ,                                                              02190000
   PIPREXX ,                                                            02200000
 CASEND  ,                                                              02210000
 #EXIT                                                                  02220000
 MODEND  ,                                                                      
